
public class HeapTree
{
	public int min_heap(int a[],int i)
	{
	
		if(2*i>a[0])
			return 0;
		if(2*i==a[0])
		{
			if(a[2*i]<a[i])
			{
				int temp=a[2*i];
				a[2*i]=a[i];
				a[i]=temp;
				 min_heap(a,2*i);
			}
		}
		else
		{
		if((a[2*i]<a[2*i+1]&& a[2*i]<a[i]))
		{
			int temp=a[2*i];
			a[2*i]=a[i];
			a[i]=temp;
			 min_heap(a,2*i);
		}
		
		if(a[2*i+1]<a[2*i]&& a[2*i+1]<a[i])
		{
			int temp=a[2*i+1];
			a[2*i+1]=a[i];
			a[i]=temp;
			min_heap(a,2*i+1);
		}
		}
		return 0;
	}
	public void heapify(int a[]) // here considering min heap
	{
		for(int i=a[0]/2;i>0;i--)
		{
			
			int j=i;
			if(2*i+1>a[0])
			{
				if(a[2*i]<a[i])
				{
					int temp=a[2*i];
					a[2*i]=a[i];
					a[i]=temp;
				}
			}
			else
			{
				min_heap(a,i);
			}
			i=j;
		}
	}
	public void display(int a[])
	{
		for(int i=1;i<=a[0];i++)
    		System.out.print(" "+a[i]);
	}
	public void insert(int a[], int n)
	{
		a[0]++;
		a[a[0]]=n;
	}
	public void delete(int a[])
	{
		a[1]=a[a[0]];
		a[0]--;
		heapify(a);
	}
    public static void main(String args[])
    {
    	int []a=new int[] {10,10,50,20,100,40,60,30,90,70,80};
    	HeapTree ht=new HeapTree();
    	Scanner sc=new Scanner(System.in);
    	System.out.println("ele before conversion into heap: ");
    	ht.display(a);
    	ht.heapify(a);
    	System.out.println("ele after conversion into heap: ");
    	ht.display(a);
    	ht.insert(a,4);
    	ht.heapify(a);
    	System.out.println("ele after insertion are: ");
    	ht.display(a);
    	System.out.println("ele after deletion are: ");
    	ht.delete(a);
    	ht.display(a);
    }
}
